@page "/"
@attribute [Authorize]
@inject DashboardService DashboardService

<PageTitle>Dashboard - Uniformes Management System</PageTitle>

<MudText Typo="Typo.h4" Class="mb-4">Uniformes Management System Dashboard</MudText>

@if (_isLoading)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudGrid>
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%">
                <MudText Typo="Typo.h6">Employees</MudText>
                <MudText Typo="Typo.body2">Total employees in system</MudText>
                <MudText Typo="Typo.h4" Class="mt-4">@_dashboardData.TotalEmployees</MudText>
                <MudButton Variant="Variant.Text" Color="Color.Primary" Class="mt-2" Href="employees">View All</MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%">
                <MudText Typo="Typo.h6">Inventory Items</MudText>
                <MudText Typo="Typo.body2">Total items in catalog</MudText>
                <MudText Typo="Typo.h4" Class="mt-4">@_dashboardData.TotalItems</MudText>
                <MudButton Variant="Variant.Text" Color="Color.Primary" Class="mt-2" Href="item-catalog">View Catalog</MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%">
                <MudText Typo="Typo.h6">Low Stock Alert</MudText>
                <MudText Typo="Typo.body2">Items below minimum level</MudText>
                <MudText Typo="Typo.h4" Class="mt-4">@_dashboardData.LowStockItems.Count</MudText>
                <MudButton Variant="Variant.Text" Color="Color.Error" Class="mt-2" Href="inventory-report">View Details</MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%">
                <MudText Typo="Typo.h6">Recent Transactions</MudText>
                <MudText Typo="Typo.body2">In the last 7 days</MudText>
                <MudText Typo="Typo.h4" Class="mt-4">@_dashboardData.TotalRecentTransactions</MudText>
                <MudButton Variant="Variant.Text" Color="Color.Primary" Class="mt-2" Href="transaction-report">View All</MudButton>
            </MudPaper>
        </MudItem>
    </MudGrid>

    <MudGrid Class="mt-4">
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="pa-4">
                <MudText Typo="Typo.h6" Class="mb-2">Recent Item Issuances</MudText>
                <MudTable Items="@_dashboardData.RecentMovements" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
                    <HeaderContent>
                        <MudTh>Employee</MudTh>
                        <MudTh>Date</MudTh>
                        <MudTh>Items</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Employee">@context.EmployeeName</MudTd>
                        <MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>
                        <MudTd DataLabel="Items">@context.Details.Count</MudTd>
                    </RowTemplate>
                    <NoRecordsContent>
                        <MudText>No recent issuances found</MudText>
                    </NoRecordsContent>
                </MudTable>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudPaper Elevation="2" Class="pa-4">
                <MudText Typo="Typo.h6" Class="mb-2">Low Stock Items</MudText>
                <MudTable Items="@_dashboardData.LowStockItems" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
                    <HeaderContent>
                        <MudTh>Item</MudTh>
                        <MudTh>Size</MudTh>
                        <MudTh>Current Stock</MudTh>
                        <MudTh>Min Level</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Item">@context.ItemName</MudTd>
                        <MudTd DataLabel="Size">@context.SizeValue</MudTd>
                        <MudTd DataLabel="Current Stock">@context.CurrentStock</MudTd>
                        <MudTd DataLabel="Min Level">@context.MinimumStock</MudTd>
                    </RowTemplate>
                    <NoRecordsContent>
                        <MudText>No low stock items found</MudText>
                    </NoRecordsContent>
                </MudTable>
            </MudPaper>
        </MudItem>
    </MudGrid>

    <MudPaper Elevation="2" Class="pa-4 mt-4">
        <MudText Typo="Typo.h6" Class="mb-2">Quick Actions</MudText>
        <MudGrid>
            <MudItem xs="12" sm="6" md="3">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Class="py-2" Href="item-issuance">
                    Issue Items to Employee
                </MudButton>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" FullWidth="true" Class="py-2" Href="employees/new">
                    Add New Employee
                </MudButton>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudButton Variant="Variant.Filled" Color="Color.Info" FullWidth="true" Class="py-2" Href="item-catalog/new">
                    Add New Item to Catalog
                </MudButton>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudButton Variant="Variant.Filled" Color="Color.Success" FullWidth="true" Class="py-2" Href="inventory-report">
                    Generate Inventory Report
                </MudButton>
            </MudItem>
        </MudGrid>
    </MudPaper>
}

@code {
    private bool _isLoading = true;
    private DashboardData _dashboardData = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        _isLoading = true;
        
        try
        {
            _dashboardData = await DashboardService.GetDashboardDataAsync();
        }
        catch (Exception)
        {
            // Handle error if needed
        }
        finally
        {
            _isLoading = false;
        }
    }
}
